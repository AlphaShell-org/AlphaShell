name: Build and upload binaries to release

on:
  push:
    tags:
      - v[0-9].*

jobs:
  build-and-release:
    name: Build and release
    strategy:
      matrix:
        target:
          [
            aarch64-unknown-linux-gnu,
            x86_64-unknown-linux-gnu,
            x86_64-pc-windows-msvc,
            aarch64-apple-darwin,
            x86_64-apple-darwin
          ]
        include:
          - target: aarch64-unknown-linux-gnu
            archive-type: tar.xz
            os: ubuntu-latest
            crosscompile: true

          - target: x86_64-unknown-linux-gnu
            archive-type: tar.xz
            os: ubuntu-latest

          - target: x86_64-pc-windows-msvc
            archive-type: zip
            file-extension: .exe
            os: windows-latest

          - target: aarch64-apple-darwin
            archive-type: zip
            os: macos-latest
            crosscompile: true

          - target: x86_64-apple-darwin
            archive-type: zip
            os: macos-latest

    runs-on: ${{ matrix.os }}
    env:
      archive: ash_${{ matrix.target }}.${{ matrix.archive-type }}
      binary: ash${{ matrix.file-extension }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache cargo and rustup
        id: cache-cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            ~/.rustup/toolchains
          key: ${{ matrix.target }}-cargo

      - name: Cache target folder
        id: cache-target
        uses: actions/cache@v3
        with:
          path: target/
          key: ${{ matrix.target }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build project with cargo
        if: ${{ !matrix.crosscompile }}
        run: cargo build --release --locked --target ${{ matrix.target }}

      - name: Install target
        if: ${{ matrix.crosscompile && steps.cache-cargo.outputs.cache-hit != 'true' }}
        run: rustup target add ${{ matrix.target }}

      - name: Install cross-compiler
        if: ${{ matrix.crosscompile && steps.cache-cargo.outputs.cache-hit != 'true' }}
        run: cargo install cross

      - name: Build project with cross
        if: ${{ matrix.crosscompile }}
        run: cross build --release --locked --target ${{ matrix.target }}

      - name: Create archive with the binary
        run: tar caf ${{ env.archive }} --directory=target/${{ matrix.target }}/release ${{ env.binary }}

      - name: Upload binary to release
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ env.archive }}
          asset_name: ${{ env.archive }}
          tag: ${{ github.ref }}
